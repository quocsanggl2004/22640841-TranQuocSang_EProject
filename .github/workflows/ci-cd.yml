name: CI/CD Pipeline

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  # Job 1: Run Tests
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [auth, product]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies - ${{ matrix.service }}
      working-directory: ./${{ matrix.service }}
      run: npm install
    
    - name: Run tests - ${{ matrix.service }}
      working-directory: ./${{ matrix.service }}
      run: npm test
      env:
        MONGODB_AUTH_URI: ${{ secrets.MONGODB_AUTH_URI }}
        MONGODB_PRODUCT_URI: ${{ secrets.MONGODB_PRODUCT_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}

  # Job 2: Build and Push Docker Images
  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'
    
    strategy:
      matrix:
        service: [auth, product, order, api-gateway]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image - ${{ matrix.service }}
      uses: docker/build-push-action@v4
      with:
        context: ./${{ matrix.service }}
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/eproject-${{ matrix.service }}:latest
          ${{ secrets.DOCKER_USERNAME }}/eproject-${{ matrix.service }}:${{ github.sha }}
        cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/eproject-${{ matrix.service }}:latest
        cache-to: type=inline

  # Job 3: Deploy Notification (Optional)
  notify:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: always()
    
    steps:
    - name: Send notification
      run: |
        echo "Build completed with status: ${{ needs.build-and-push.result }}"
        echo "Commit SHA: ${{ github.sha }}"
        echo "Triggered by: ${{ github.actor }}"
